#include <iostream>
#include <ctime>
#include <cmath>

int GetRandomNumber(int min, int max)
{
    // Установить генератор случайных чисел
    srand(time(NULL));

    // Получить случайное число - формула
    int num = min + rand() % (max - min + 1);
    return num;
}

int main(){
    int sum = 0;
    int xi;
    int yi;
    int points;

    // Спрашиваем значения и считаем поинты
    for (int i = 1; i < 5; i++){
        std::cout << "Введите координаты выстрела \n";
        std::cin >> xi >> yi;
        xi = xi + GetRandomNumber(-5, 5);
        yi = yi + GetRandomNumber(-5, 5);
        std::cout <<"Выстрел " << i << " = (" <<xi<< "," << yi <<")\n";
        points = 5 - std::sqrt((xi * xi + yi * yi));
        if (((points>>31)&1) == 0){
            std::cout << "Кол-во очков за этот выстрел - " << points;
            sum = sum + points;
        }
        else {
            std::cout << "Кол-во очков за этот выстрел - 0 ";
        }
    }

    // Смотрим лошара или красавчик
    std::cout << "\nСумма очков: " << sum << std::endl;
    if (sum < 10) {
        std::cout << "Лузер (лошара)";
    }
    else{
        std::cout << "Выиграл (красавчик)";
    }
}

/*
Дано: круглая мишень в двумерном пространстве, центр которой в центре (0,0). Мишень разбита на круглые сектора радиусами [0, 1), [1, 2), [2, 3), [3, 4), [4, 5). Всего 5 секторов. Баллы за центральный сектор = 5. За каждый следующий сектор от центра бал на единицу меньше. Вне мишени балл = 0.
Пользователь делает 5 выстрелов: {(xi, yi)}, где i=[1,5]. (Задаёт через консоль) попадание i = (xi + random_xi(-5,5), yi + random_yi(-5,5)) за каждое попадание начисляются баллы.
На выходе: Sum of points (сумма балов) и сообщение "лузер", если суммарное значение баллов < 10.
Ачивка крутости тем, кто решит задачу с использованием двух условных операторов.
Необходимо использовать хотя бы один побитовый оператор.
*/